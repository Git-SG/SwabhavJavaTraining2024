package com.aurionpro.observer.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import com.aurionpro.observer.exception.InsufficientFundsException;

public class Account {
	
	private int accountNumber;
	private String name;
	private double balance;
	private List<INotifier> notifiers;
	
	Scanner scanner = new Scanner(System.in);
	
	public Account(int accountNumber, String name, double balance) {
		super();
		this.accountNumber = accountNumber;
		this.name = name;
		if(balance < 0)
			throw new InsufficientFundsException();
		this.balance = balance;
		this.notifiers = new ArrayList<INotifier>();
		
		askForNotifiers(scanner);
	}
	
	public void askForNotifiers(Scanner scanner) {
		System.out.println("Do you wish to opt for SMS notifications? Enter 'yes' for activation");
		String option = scanner.next();
		if (option.equalsIgnoreCase("yes")) {
			registerNotifier(new SMSNotifier());
			System.out.println("Opted for SMS Notification");
		}
		System.out.println("Do you wish to opt for Email notifications? Enter 'yes' for activation");
		option = scanner.next();
		if (option.equalsIgnoreCase("yes")) {
			registerNotifier(new EmailNotifier());
			System.out.println("Opted for SMS Notification");
		}
		System.out.println("Do you wish to opt for Whatsapp notifications? Enter 'yes' for activation");
		option = scanner.next();
		if (option.equalsIgnoreCase("yes")) {
			registerNotifier(new WhatsappNotifier());
			System.out.println("Opted for SMS Notification");
		}
	}
	
	public void deposit(double amount) {
		balance += amount;
		System.out.println("After depositing, the balance is " + balance );
	}
	
	public void withdraw(double amount) {
		if(amount > balance)
			throw new InsufficientFundsException();
		balance-= amount;
		System.out.println("After withdrawing, the balance is " + balance );

	}
	
	public void registerNotifier(INotifier notifier) {
		notifiers.add(notifier);
	}

	public int getAccountNumber() {
		return accountNumber;
	}

	public void setAccountNumber(int accountNumber) {
		this.accountNumber = accountNumber;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getBalance() {
		return balance;
	}

	public void setBalance(double balance) {
		if(balance < 0)
			throw new InsufficientFundsException();
		this.balance = balance;
	}
	
	
	
	
}
